name: CI
on:
  pull_request:
    branches: [master, 'releases/*']
jobs:
  check:
    name: Check Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check Version
        run: yarn version check 

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["12", "14"]
    name: Test Node V${{ matrix.node }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install
        run: yarn
      
      - name: build
        run: yarn build

      - name: lint
        run: yarn lint

      - name: test
        run: yarn test          

      - name: Link Package
        working-directory: ./examples
        run: |
          yarn link ../
          yarn

      - name: Test examples
        working-directory: ./examples
        run: yarn jest
          
